<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cs.dao.production.ProductionMapper">
  <resultMap id="BaseResultMap" type="com.cs.pojo.Production">
    <id column="proId" jdbcType="INTEGER" property="proId" />
    <result column="proName" jdbcType="VARCHAR" property="proName" />
    <result column="award" jdbcType="VARCHAR" property="award" />
    <result column="membersName" jdbcType="VARCHAR" property="membersName" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cs.pojo.Production">
    <result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
  </resultMap>
  <sql id="Base_Column_List">
    proId, proName, award, membersName, pic
  </sql>
  <sql id="Blob_Column_List">
    introduction
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from production
    where proId = #{proId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from production
    where proId = #{proId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cs.pojo.Production">
    insert into production (proId, proName, award, 
      membersName, pic, introduction
      )
    values (#{proId,jdbcType=INTEGER}, #{proName,jdbcType=VARCHAR}, #{award,jdbcType=VARCHAR}, 
      #{membersName,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{introduction,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cs.pojo.Production">
    insert into production
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="proId != null">
        proId,
      </if>
      <if test="proName != null">
        proName,
      </if>
      <if test="award != null">
        award,
      </if>
      <if test="membersName != null">
        membersName,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="proId != null">
        #{proId,jdbcType=INTEGER},
      </if>
      <if test="proName != null">
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="award != null">
        #{award,jdbcType=VARCHAR},
      </if>
      <if test="membersName != null">
        #{membersName,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cs.pojo.Production">
    update production
    <set>
      <if test="proName != null">
        proName = #{proName,jdbcType=VARCHAR},
      </if>
      <if test="award != null">
        award = #{award,jdbcType=VARCHAR},
      </if>
      <if test="membersName != null">
        membersName = #{membersName,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where proId = #{proId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cs.pojo.Production">
    update production
    set proName = #{proName,jdbcType=VARCHAR},
      award = #{award,jdbcType=VARCHAR},
      membersName = #{membersName,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=LONGVARCHAR}
    where proId = #{proId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cs.pojo.Production">
    update production
    set proName = #{proName,jdbcType=VARCHAR},
      award = #{award,jdbcType=VARCHAR},
      membersName = #{membersName,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR}
    where proId = #{proId,jdbcType=INTEGER}
  </update>
</mapper>