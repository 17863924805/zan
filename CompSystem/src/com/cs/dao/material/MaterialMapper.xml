<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cs.dao.material.MaterialMapper" >
  <resultMap id="BaseResultMap" type="com.cs.pojo.Material" >
    <id column="materialId" property="materialid" jdbcType="INTEGER" />
    <result column="studentNo" property="studentno" jdbcType="INTEGER" />
    <result column="conditionId" property="conditionid" jdbcType="INTEGER" />
    <result column="materialPic" property="materialpic" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    materialId, studentNo, conditionId, materialPic, status
  </sql>
  <!-- 根据学号查找材料。已审核通过的 -->
  <select id="selectByStudentno" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from material
    where studentNo = #{studentNo,jdbcType=INTEGER} and status=1
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from material
    where materialId = #{materialid,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from material
    where materialId = #{materialid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" parameterType="com.cs.pojo.Material" >
    insert into material (materialId, studentNo, conditionId, 
      materialPic, status)
    values (#{materialid,jdbcType=INTEGER}, #{studentno,jdbcType=INTEGER}, #{conditionid,jdbcType=INTEGER}, 
      #{materialpic,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" parameterType="com.cs.pojo.Material" >
    insert into material
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="materialid != null" >
        materialId,
      </if>
      <if test="studentno != null" >
        studentNo,
      </if>
      <if test="conditionid != null" >
        conditionId,
      </if>
      <if test="materialpic != null" >
        materialPic,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="materialid != null" >
        #{materialid,jdbcType=INTEGER},
      </if>
      <if test="studentno != null" >
        #{studentno,jdbcType=INTEGER},
      </if>
      <if test="conditionid != null" >
        #{conditionid,jdbcType=INTEGER},
      </if>
      <if test="materialpic != null" >
        #{materialpic,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cs.pojo.Material" >
    update material
    <set >
      <if test="studentno != null" >
        studentNo = #{studentno,jdbcType=INTEGER},
      </if>
      <if test="conditionid != null" >
        conditionId = #{conditionid,jdbcType=INTEGER},
      </if>
      <if test="materialpic != null" >
        materialPic = #{materialpic,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where materialId = #{materialid,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.cs.pojo.Material" >
    update material
    set 
      materialPic = #{materialpic,jdbcType=VARCHAR},
      status = 0
    where materialId = #{materialid,jdbcType=INTEGER}
  </update>
  
  <!--  Max-->
   <select id="allMaterial" resultType="Map" parameterType="Map"  >
  	SELECT m.*,s.studentName,c.conditionName from material m ,conditions c,student s 
	where m.conditionId=c.conditionId and m.studentNo=s.studentNo and (m.`status` is null or m.`status`=0 )
	 limit #{page},#{pageSize}
  </select>
  <select id="MaterialCount"   resultType="int">
  	SELECT count(*) from material m ,conditions c,student s 
	where m.conditionId=c.conditionId and m.studentNo=s.studentNo and( m.`status` is null or m.`status`=0)
  </select>
   <update id="updateState" parameterType="Map" >
    	update material m set m.`status`=#{state} where m.materialId=#{id}
  </update>
</mapper>