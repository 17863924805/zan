<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cs.dao.student.StudentMapper">
  <resultMap id="BaseResultMap" type="com.cs.pojo.Student">
    <id column="studentNo" jdbcType="INTEGER" property="studentNo" />
    <result column="studentName" jdbcType="VARCHAR" property="studentName" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="departmentId" jdbcType="INTEGER" property="departmentId" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="classNo" jdbcType="INTEGER" property="classNo" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <sql id="Base_Column_List">
    studentNo, studentName, gender, departmentId, profession, classNo, grade, phone, 
    email, password
  </sql>
  <select id="selectByID" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where studentNo = #{studentNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByID" parameterType="java.lang.Integer">
    delete from student
    where studentNo = #{studentNo,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cs.pojo.Student">
    insert into student (studentNo, studentName, gender, 
      departmentId, profession, classNo, 
      grade, phone, email, 
      password)
    values (#{studentNo,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=INTEGER}, #{profession,jdbcType=VARCHAR}, #{classNo,jdbcType=INTEGER}, 
      #{grade,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cs.pojo.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentNo != null">
        studentNo,
      </if>
      <if test="studentName != null">
        studentName,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="departmentId != null">
        departmentId,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="classNo != null">
        classNo,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentNo != null">
        #{studentNo,jdbcType=INTEGER},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="classNo != null">
        #{classNo,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByIDSelective" parameterType="com.cs.pojo.Student">
    update student
    <set>
      <if test="studentName != null">
        studentName = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        departmentId = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="classNo != null">
        classNo = #{classNo,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where studentNo = #{studentNo,jdbcType=INTEGER}
  </update>
  <update id="updateByID" parameterType="com.cs.pojo.Student">
    update student
    set studentName = #{studentName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      departmentId = #{departmentId,jdbcType=INTEGER},
      profession = #{profession,jdbcType=VARCHAR},
      classNo = #{classNo,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where studentNo = #{studentNo,jdbcType=INTEGER}
  </update>
</mapper>